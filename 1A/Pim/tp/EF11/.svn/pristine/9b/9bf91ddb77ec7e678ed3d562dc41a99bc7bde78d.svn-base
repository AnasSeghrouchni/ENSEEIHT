with Arbre; use Arbre;
with ADA.IO_EXCEPTIONS;
with Ada.Strings.Unbounded; use Ada.Strings.Unbounded;
with Ada.Streams.Stream_IO; use Ada.Streams.Stream_IO;
with Ada.Text_IO; use Ada.Text_IO;
with Table;use Table;

package body Decompression is

    procedure Reconstruction_Arbre(Arbre:out T_Arbre; Code : in Unbounded_String; Octet:in T_Tableau) is
        procedure Parcours(Arbre:out T_Arbre; Code : in Unbounded_String; Octet:in T_Tableau; i_str : in integer;i_oct:in integer) is
            if Est_Feuille(Arbre) then
                Null;
            elsif Element(Code,indice)='0' then
                Parcours(Arbre.all.Gauche, Code, Octet, indice+1);
            else
                Arbre.all.Cel:=Octet(i_oct);
                Parcours(Arbre, Code, Octet, indice+1,i_oct+1);
            end if
        end Parcours;
        Parcours(Arbre, Code, Octet, 1,1);
    end Reconstruction_Arbre;


    procedure Decompresse(Nom_Fichier: in String) is
        File1, File2: Ada.Streams.Stream_IO.File_Type;
        S:T_Chaine;
        Arbre: T_Arbre;
        Table: T_Table;
        S1,S2: Stream_Access;
        Fichier_String: Unbounded_String:=To_Unbounded_String("");
        Octet: T_Octet;
        Str : Unbounded_String;
        Code_Fin:Unbounded_String;
        Ancien_nom:String(1..Length(To_Unbounded_String(Nom_Fichier)));
    begin
        Reconstruction_Arbre(Arbre, Code, Tableau)
        Initialiser(Table);
        Construction_Table(Arbre,Table);
        if tiret_b then
            New_Line;
            New_Line;
            New_Line;
            Put("####################################Table de Huffmann####################################");
            New_Line;
            New_Line;
            New_Line;

            Fin_au_Debut(Table,inutile);
            Affiche_Table(Table);
            New_Line;
            New_Line;
            New_Line;
        end if;

        Create(File2, Out_File, To_String(Nom_Fichier & To_Unbounded_String(".hff")));
        S2:=Stream(File2);
        Mise_a_jour(Table,Code_Fin);
        Ecrit_Caracteres(S2, Table);                -- 1) Caracteres en Octet selon parcours infixe

        Fichier_String:=Fichier_String & Code(Arbre);        -- 2) Code de l'arbre

        Open(File1, In_File, Nom_Fichier);
        S1:=Stream(File1);
        while not End_Of_File(File1) loop            -- 3) Fichier avec Octets transformés selon la table
            Fichier_String:=Fichier_String & La_Donnee(Table, T_Octet'Input(S1));
        end loop;
        Close(File1);

        Str:=Fichier_String & Code_Fin;
        for i in 1..(length(Str)/8) loop
            Octet:=0;
            for k in 1..8 loop
                if Element(Str,((i-1)*8+k))='0' then
                    Octet:=(Octet * 2) or 0;
                else
                    Octet:=(Octet*2) or 1;
                end if;
            end loop;
            T_Octet'Write(S2,Octet);
        end loop;
        Octet:=0;
        for i in ((length(Str)/8)*8+1)..length(Str) loop
            if Element(Str,i)='0' then
                Octet:=(Octet*2) or 0;
            else
                Octet:=(Octet*2) or 1;
            end if;
        end loop;

        for i in 1..(8-(length(Str) mod 8)) loop
            Octet:=(Octet*2) or 0;
        end loop;

        T_Octet'Write(S2,Octet);

        Close(File2);
        put("#############################Compression realisée avec succès#############################");
        New_Line;
        put("##########################################################################################");
        New_Line;
        New_Line;
        Put("Nom du fichier compressé : ");
        Put(Nom_Fichier);
        Put(".hff");
        New_Line;
        New_Line;
        put("##########################################################################################");
        New_Line;
        put("#######################################    FIN    ########################################");
    exception
        when ADA.IO_EXCEPTIONS.NAME_ERROR => Put("Placez le fichier à compresser dans le bon dossier puis relancez ou verifiez l'orthographe du fichier à compresser.");
    end Decompression;
