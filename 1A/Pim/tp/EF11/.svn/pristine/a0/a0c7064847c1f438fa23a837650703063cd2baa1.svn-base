with Ada.Strings.Unbounded; use Ada.Strings.Unbounded;
--generic
   -- type T_Cle is private;
    --type T_Donnee is private;

package Table is

        type T_Octet is mod 2**8;

    type T_Table is limited private;

    procedure Initialiser(Table: out T_Table) ;

	-- Est-ce qu'une Table est vide ?
	function Est_Vide (Table : T_Table) return Boolean;

    function Taille (Table : in T_Table) return Integer;

    function La_Donnee (Table : in T_Table ; Cle : in T_Octet) return Unbounded_String;

    procedure Supprimer(Table : in out T_Table; Cle : in T_Octet);

    procedure Enregistrer (Table : in out T_Table ; Cle : in T_Octet ; Donnee : in Unbounded_String);

    procedure Mise_a_jour(Table : in out T_Table);

	function Cle_Presente (Table : in T_Table ; Cle : in T_Octet) return Boolean;

    procedure Vider (Table : in out T_Table) ;

    procedure Affiche_Caractere(Octet: in T_Octet);

    procedure Affiche_Table(Table: in T_Table);




private

    type T_Cellule;

    type T_Table is access T_Cellule;

    type T_Cellule is record
        Cle : T_Octet;
        Donnee : Unbounded_String;
        Prochain : T_Table;
    end record;

end Table;
