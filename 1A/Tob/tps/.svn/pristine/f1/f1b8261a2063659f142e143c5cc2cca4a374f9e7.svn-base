import java.awt.Color;

public class Cercle {
		
	/** Construire un cercle à partir d’un point qui désigne son centre et d’un réel correspon-
	dant à la valeur de son rayon. Sa couleur est considérée comme étant le bleu.
	*/
	
	public Cercle(Point centre, double rayon) {
		assert rayon>0;
		assert centre!=null;
		this.centre = new Point(centre.getX(), centre.getY());
		this.rayon = rayon;
		this.couleur= Color.blue;
		this.diametre=2*rayon;
	}
	
	public void translater(double dx, double dy) {
		this.centre.translater(dx,dy);
	}
	
	public Point getCentre() {
		return new Point(this.centre.getX(),this.centre.getY());
	}
	
	public double getRayon() {
		return this.rayon;
	}
	
	public double getDiametre(){
		return this.diametre;
	}
	
	public boolean contient(Point A) {
		assert A!=null;
		return this.centre.distance(A)<=this.rayon;
	}
	
	public double aire() {
		return PI*this.rayon*this.rayon;
	}
	
	public double perimetre() {
		return 2*PI*this.rayon;
	}
	
	public Color getCouleur() {
		return this.couleur;
	}
	
	public void setCouleur(Color c) {
		assert c!= null;
		this.couleur = c;
	}
	
	public Cercle(Point A, Point B, Color c) {
		assert A!=null;
		assert B!=null;
		assert c!=null;
		double xc = (A.getX()+B.getX())/2;
		double yc = (A.getY()+B.getY())/2;
		this.centre = new Point(xc,yc);
		this.rayon=A.distance(B)/2;
		this.couleur= c;
		this.diametre=A.distance(B);
	}
	
	public Cercle(Point A, Point B) {
		this(A,B,Color.blue);
	}
	
	public static Cercle creerCercle(Point A, Point B) {
		assert A!=null;
		assert B!=null;
		return new Cercle(A,A.distance(B));
	}
	
	public String toString() {
		return "C" + this.rayon + "@" + this.centre.toString() ;
	}
	
	public void setRayon(double r) {
		assert rayon>0;
		this.rayon= r;
		this.diametre=2*r;
	}
	
	public void setDiametre(double d) {
		assert d>0;
		this.diametre= d;
		this.rayon=d/2;
	}
	
	public static final double PI = Math.PI;
	
	private Point centre;
	private double diametre;
	private double rayon;
	private Color couleur;

	
}