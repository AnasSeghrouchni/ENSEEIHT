import java.awt.Color;
import org.junit.*;
import static org.junit.Assert.*;

/**
  * Classe de test de E12, E13 et E14.
  * @author	Anas Seghrouchni
  */
public class CercleTest {
	// précision pour les comparaisons réelle
	public final static double EPSILON = 0.001;

	// Les points du test
	private Point E, F;

	// Les cercles du test
	private Cercle C1, C2, C3;
	
	@Before public void setUp() {
		// Construire les points
		E = new Point (0,3);
		F = new Point (4,0);


		// Construire les cercles
		C1 = new Cercle(E, F, Color.pink);
		C2= new Cercle(E,F);
		C3 = Cercle.creerCercle(E, F);
	}
	
	/** Vérifier si deux points ont mêmes coordonnées.
	  * @param p1 le premier point
	  * @param p2 le deuxième point
	  */
	static void memesCoordonnees(String message, Point p1, Point p2) {
		assertEquals(message + " (x)", p1.getX(), p2.getX(), EPSILON);
		assertEquals(message + " (y)", p1.getY(), p2.getY(), EPSILON);
	}
	
	@Test public void testerE12C1() {
		memesCoordonnees("E12 : Centre de C1 incorrect", new Point(2,1.5), C1.getCentre());
		assertEquals("E12 : Rayon de C1 incorrect",2.5, C1.getRayon(), EPSILON);
		assertEquals(Color.pink, C1.getCouleur());
	}
	
	@Test public void testerE13C2() {
		memesCoordonnees("E13 : Centre de C2 incorrect", new Point(2,1.5), C2.getCentre());
		assertEquals("E13 : Rayon de C2 incorrect",
				2.5, C2.getRayon(), EPSILON);
		assertEquals(Color.blue, C2.getCouleur());
	}

	@Test public void testerE14C3() {
		memesCoordonnees("E14 : Centre de C3 incorrect", E, C3.getCentre());
		assertEquals("E14 : Rayon de C3 incorrect",
				5, C3.getRayon(), EPSILON);
		assertEquals(Color.blue, C3.getCouleur());
	}
}
