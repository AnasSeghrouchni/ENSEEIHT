[comment encoding = UTF-8 /]
[module totina('http://petrinet')]

[template public petrinettotina(aReseauPetri : ReseauPetri)]
[comment @main/]
[file (aReseauPetri.name + '.net', false, 'UTF-8')]
['net ' + aReseauPetri.name/]
[let places : OrderedSet(Place) = aReseauPetri.getPlaces() ] 
	[if (places->size() > 0)]
		[for (place : Place | places)]
['pl ' + place.name + ' (' + place.nbJeton + ')'/]
		[/for]
	[/if]
[/let]
[let transis : OrderedSet(Transition) = aReseauPetri.getTransi() ] 
	[if (transis->size() > 0)]
		[for (transi : Transition | transis)]
[transi.toTina()/] 
		[/for]
	[/if]
[/let]
[/file]
[/template]

[query public getPlaces(rp: ReseauPetri) : OrderedSet(Place) = 
	rp.noeud->select( e | e.oclIsTypeOf(Place) )
		->collect( e | e.oclAsType(Place) )
		->asOrderedSet()
/]

[query public getTransi(rp: ReseauPetri) : OrderedSet(Transition) = 
	rp.noeud->select( e | e.oclIsTypeOf(Transition) )
		->collect( e | e.oclAsType(Transition) )
		->asOrderedSet()
/]

[template public toTina(tr : Transition) post (trim()) ]
['tr ' + tr.name/][for (arc : Arc | tr.sortants)] [arc.source.name/][if (arc.oclIsTypeOf(ReadArc))]['?' + arc.poids/][else][if (arc.poids > 1)]['*' + arc.poids/][/if][/if][/for][' ->'/][for (arc : Arc | tr.entrant)] [arc.cible.name/][if (arc.poids > 1)]['*' + arc.poids/][/if][/for]
[/template]